#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.ImageViewer.StudyManagement.Storage
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="dicom_store")]
	public partial class DicomStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRuleAction(RuleAction instance);
    partial void UpdateRuleAction(RuleAction instance);
    partial void DeleteRuleAction(RuleAction instance);
    partial void InsertRuleCondition(RuleCondition instance);
    partial void UpdateRuleCondition(RuleCondition instance);
    partial void DeleteRuleCondition(RuleCondition instance);
    partial void InsertStudy(Study instance);
    partial void UpdateStudy(Study instance);
    partial void DeleteStudy(Study instance);
    partial void InsertWorkItem(WorkItem instance);
    partial void UpdateWorkItem(WorkItem instance);
    partial void DeleteWorkItem(WorkItem instance);
    partial void InsertWorkItemUid(WorkItemUid instance);
    partial void UpdateWorkItemUid(WorkItemUid instance);
    partial void DeleteWorkItemUid(WorkItemUid instance);
    #endregion
		
		public DicomStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DicomStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DicomStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DicomStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RuleAction> RuleActions
		{
			get
			{
				return this.GetTable<RuleAction>();
			}
		}
		
		public System.Data.Linq.Table<RuleCondition> RuleConditions
		{
			get
			{
				return this.GetTable<RuleCondition>();
			}
		}
		
		public System.Data.Linq.Table<Study> Studies
		{
			get
			{
				return this.GetTable<Study>();
			}
		}
		
		public System.Data.Linq.Table<WorkItem> WorkItems
		{
			get
			{
				return this.GetTable<WorkItem>();
			}
		}
		
		public System.Data.Linq.Table<WorkItemUid> WorkItemUids
		{
			get
			{
				return this.GetTable<WorkItemUid>();
			}
		}
	}
	
	[Table()]
	public partial class RuleAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private long _RuleConditionOid;
		
		private RuleActionType _Type;
		
		private string _SerializedAction;
		
		private EntityRef<RuleCondition> _RuleCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnRuleConditionOidChanging(long value);
    partial void OnRuleConditionOidChanged();
    partial void OnTypeChanging(RuleActionType value);
    partial void OnTypeChanged();
    partial void OnSerializedActionChanging(string value);
    partial void OnSerializedActionChanged();
    #endregion
		
		public RuleAction()
		{
			this._RuleCondition = default(EntityRef<RuleCondition>);
			OnCreated();
		}
		
		[Column(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[Column(Storage="_RuleConditionOid", DbType="BigInt NOT NULL")]
		public long RuleConditionOid
		{
			get
			{
				return this._RuleConditionOid;
			}
			set
			{
				if ((this._RuleConditionOid != value))
				{
					if (this._RuleCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRuleConditionOidChanging(value);
					this.SendPropertyChanging();
					this._RuleConditionOid = value;
					this.SendPropertyChanged("RuleConditionOid");
					this.OnRuleConditionOidChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="SmallInt NOT NULL", CanBeNull=false)]
		public RuleActionType Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_SerializedAction", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SerializedAction
		{
			get
			{
				return this._SerializedAction;
			}
			set
			{
				if ((this._SerializedAction != value))
				{
					this.OnSerializedActionChanging(value);
					this.SendPropertyChanging();
					this._SerializedAction = value;
					this.SendPropertyChanged("SerializedAction");
					this.OnSerializedActionChanged();
				}
			}
		}
		
		[Association(Name="RuleCondition_RuleAction", Storage="_RuleCondition", ThisKey="RuleConditionOid", OtherKey="Oid", IsForeignKey=true)]
		public RuleCondition Condition
		{
			get
			{
				return this._RuleCondition.Entity;
			}
			set
			{
				RuleCondition previousValue = this._RuleCondition.Entity;
				if (((previousValue != value) 
							|| (this._RuleCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RuleCondition.Entity = null;
						previousValue.Actions.Remove(this);
					}
					this._RuleCondition.Entity = value;
					if ((value != null))
					{
						value.Actions.Add(this);
						this._RuleConditionOid = value.Oid;
					}
					else
					{
						this._RuleConditionOid = default(long);
					}
					this.SendPropertyChanged("Condition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table()]
	public partial class RuleCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private string _Name;
		
		private string _SerializedCondition;
		
		private bool _AllStudies;
		
		private EntitySet<RuleAction> _RuleActions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSerializedConditionChanging(string value);
    partial void OnSerializedConditionChanged();
    partial void OnAllStudiesChanging(bool value);
    partial void OnAllStudiesChanged();
    #endregion
		
		public RuleCondition()
		{
			this._RuleActions = new EntitySet<RuleAction>(new Action<RuleAction>(this.attach_RuleActions), new Action<RuleAction>(this.detach_RuleActions));
			OnCreated();
		}
		
		[Column(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_SerializedCondition", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SerializedCondition
		{
			get
			{
				return this._SerializedCondition;
			}
			set
			{
				if ((this._SerializedCondition != value))
				{
					this.OnSerializedConditionChanging(value);
					this.SendPropertyChanging();
					this._SerializedCondition = value;
					this.SendPropertyChanged("SerializedCondition");
					this.OnSerializedConditionChanged();
				}
			}
		}
		
		[Column(Storage="_AllStudies", DbType="Bit NOT NULL")]
		public bool AllStudies
		{
			get
			{
				return this._AllStudies;
			}
			set
			{
				if ((this._AllStudies != value))
				{
					this.OnAllStudiesChanging(value);
					this.SendPropertyChanging();
					this._AllStudies = value;
					this.SendPropertyChanged("AllStudies");
					this.OnAllStudiesChanged();
				}
			}
		}
		
		[Association(Name="RuleCondition_RuleAction", Storage="_RuleActions", ThisKey="Oid", OtherKey="RuleConditionOid")]
		public EntitySet<RuleAction> Actions
		{
			get
			{
				return this._RuleActions;
			}
			set
			{
				this._RuleActions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RuleActions(RuleAction entity)
		{
			this.SendPropertyChanging();
			entity.Condition = this;
		}
		
		private void detach_RuleActions(RuleAction entity)
		{
			this.SendPropertyChanging();
			entity.Condition = null;
		}
	}
	
	[Table()]
	public partial class Study : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private string _StudyId;
		
		private string _StudyTimeRaw;
		
		private System.Nullable<System.DateTime> _StudyDate;
		
		private string _StudyDateRaw;
		
		private string _AccessionNumber;
		
		private string _StudyInstanceUid;
		
		private string _StudyDescription;
		
		private string _ModalitiesInStudy;
		
		private System.Nullable<int> _NumberOfStudyRelatedSeries;
		
		private System.Nullable<int> _NumberOfStudyRelatedInstances;
		
		private string _SpecificCharacterSet;
		
		private string _ProcedureCodeSequenceCodingSchemeDesignator;
		
		private string _ProcedureCodeSequenceCodeValue;
		
		private System.Nullable<System.DateTime> _StoreTime;
		
		private string _StudyXmlUri;
		
		private string _PatientsNameRaw;
		
		private string _PatientsName;
		
		private string _ReferringPhysiciansNameRaw;
		
		private string _ReferringPhysiciansName;
		
		private string _PatientId;
		
		private string _PatientsSex;
		
		private string _PatientsBirthDateRaw;
		
		private string _PatientSpeciesDescription;
		
		private string _PatientSpeciesCodeSequenceCodingSchemeDesignator;
		
		private string _PatientSpeciesCodeSequenceCodeValue;
		
		private string _PatientSpeciesCodeSequenceCodeMeaning;
		
		private string _PatientBreedDescription;
		
		private string _PatientBreedCodeSequenceCodingSchemeDesignator;
		
		private string _PatientBreedCodeSequenceCodeValue;
		
		private string _PatientBreedCodeSequenceCodeMeaning;
		
		private string _ResponsiblePerson;
		
		private string _ResponsiblePersonRaw;
		
		private string _ResponsiblePersonRole;
		
		private string _ResponsibleOrganization;
		
		private System.DateTime _DeleteTime;
		
		private bool _Deleted;
		
		private EntitySet<WorkItem> _WorkItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnStudyIdChanging(string value);
    partial void OnStudyIdChanged();
    partial void OnStudyTimeRawChanging(string value);
    partial void OnStudyTimeRawChanged();
    partial void OnStudyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStudyDateChanged();
    partial void OnStudyDateRawChanging(string value);
    partial void OnStudyDateRawChanged();
    partial void OnAccessionNumberChanging(string value);
    partial void OnAccessionNumberChanged();
    partial void OnStudyInstanceUidChanging(string value);
    partial void OnStudyInstanceUidChanged();
    partial void OnStudyDescriptionChanging(string value);
    partial void OnStudyDescriptionChanged();
    partial void OnModalitiesInStudyChanging(string value);
    partial void OnModalitiesInStudyChanged();
    partial void OnNumberOfStudyRelatedSeriesChanging(System.Nullable<int> value);
    partial void OnNumberOfStudyRelatedSeriesChanged();
    partial void OnNumberOfStudyRelatedInstancesChanging(System.Nullable<int> value);
    partial void OnNumberOfStudyRelatedInstancesChanged();
    partial void OnSpecificCharacterSetChanging(string value);
    partial void OnSpecificCharacterSetChanged();
    partial void OnProcedureCodeSequenceCodingSchemeDesignatorChanging(string value);
    partial void OnProcedureCodeSequenceCodingSchemeDesignatorChanged();
    partial void OnProcedureCodeSequenceCodeValueChanging(string value);
    partial void OnProcedureCodeSequenceCodeValueChanged();
    partial void OnStoreTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStoreTimeChanged();
    partial void OnStudyXmlUriChanging(string value);
    partial void OnStudyXmlUriChanged();
    partial void OnPatientsNameRawChanging(string value);
    partial void OnPatientsNameRawChanged();
    partial void OnPatientsNameChanging(string value);
    partial void OnPatientsNameChanged();
    partial void OnReferringPhysiciansNameRawChanging(string value);
    partial void OnReferringPhysiciansNameRawChanged();
    partial void OnReferringPhysiciansNameChanging(string value);
    partial void OnReferringPhysiciansNameChanged();
    partial void OnPatientIdChanging(string value);
    partial void OnPatientIdChanged();
    partial void OnPatientsSexChanging(string value);
    partial void OnPatientsSexChanged();
    partial void OnPatientsBirthDateRawChanging(string value);
    partial void OnPatientsBirthDateRawChanged();
    partial void OnPatientSpeciesDescriptionChanging(string value);
    partial void OnPatientSpeciesDescriptionChanged();
    partial void OnPatientSpeciesCodeSequenceCodingSchemeDesignatorChanging(string value);
    partial void OnPatientSpeciesCodeSequenceCodingSchemeDesignatorChanged();
    partial void OnPatientSpeciesCodeSequenceCodeValueChanging(string value);
    partial void OnPatientSpeciesCodeSequenceCodeValueChanged();
    partial void OnPatientSpeciesCodeSequenceCodeMeaningChanging(string value);
    partial void OnPatientSpeciesCodeSequenceCodeMeaningChanged();
    partial void OnPatientBreedDescriptionChanging(string value);
    partial void OnPatientBreedDescriptionChanged();
    partial void OnPatientBreedCodeSequenceCodingSchemeDesignatorChanging(string value);
    partial void OnPatientBreedCodeSequenceCodingSchemeDesignatorChanged();
    partial void OnPatientBreedCodeSequenceCodeValueChanging(string value);
    partial void OnPatientBreedCodeSequenceCodeValueChanged();
    partial void OnPatientBreedCodeSequenceCodeMeaningChanging(string value);
    partial void OnPatientBreedCodeSequenceCodeMeaningChanged();
    partial void OnResponsiblePersonChanging(string value);
    partial void OnResponsiblePersonChanged();
    partial void OnResponsiblePersonRawChanging(string value);
    partial void OnResponsiblePersonRawChanged();
    partial void OnResponsiblePersonRoleChanging(string value);
    partial void OnResponsiblePersonRoleChanged();
    partial void OnResponsibleOrganizationChanging(string value);
    partial void OnResponsibleOrganizationChanged();
    partial void OnDeleteTimeChanging(System.DateTime value);
    partial void OnDeleteTimeChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Study()
		{
			this._WorkItems = new EntitySet<WorkItem>(new Action<WorkItem>(this.attach_WorkItems), new Action<WorkItem>(this.detach_WorkItems));
			OnCreated();
		}
		
		[Column(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[Column(Storage="_StudyId", DbType="NVarChar(16)")]
		public string StudyId
		{
			get
			{
				return this._StudyId;
			}
			set
			{
				if ((this._StudyId != value))
				{
					this.OnStudyIdChanging(value);
					this.SendPropertyChanging();
					this._StudyId = value;
					this.SendPropertyChanged("StudyId");
					this.OnStudyIdChanged();
				}
			}
		}
		
		[Column(Storage="_StudyTimeRaw", DbType="NVarChar(16)")]
		public string StudyTimeRaw
		{
			get
			{
				return this._StudyTimeRaw;
			}
			set
			{
				if ((this._StudyTimeRaw != value))
				{
					this.OnStudyTimeRawChanging(value);
					this.SendPropertyChanging();
					this._StudyTimeRaw = value;
					this.SendPropertyChanged("StudyTimeRaw");
					this.OnStudyTimeRawChanged();
				}
			}
		}
		
		[Column(Storage="_StudyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StudyDate
		{
			get
			{
				return this._StudyDate;
			}
			set
			{
				if ((this._StudyDate != value))
				{
					this.OnStudyDateChanging(value);
					this.SendPropertyChanging();
					this._StudyDate = value;
					this.SendPropertyChanged("StudyDate");
					this.OnStudyDateChanged();
				}
			}
		}
		
		[Column(Storage="_StudyDateRaw", DbType="NVarChar(26)")]
		public string StudyDateRaw
		{
			get
			{
				return this._StudyDateRaw;
			}
			set
			{
				if ((this._StudyDateRaw != value))
				{
					this.OnStudyDateRawChanging(value);
					this.SendPropertyChanging();
					this._StudyDateRaw = value;
					this.SendPropertyChanged("StudyDateRaw");
					this.OnStudyDateRawChanged();
				}
			}
		}
		
		[Column(Storage="_AccessionNumber", DbType="NVarChar(16)")]
		public string AccessionNumber
		{
			get
			{
				return this._AccessionNumber;
			}
			set
			{
				if ((this._AccessionNumber != value))
				{
					this.OnAccessionNumberChanging(value);
					this.SendPropertyChanging();
					this._AccessionNumber = value;
					this.SendPropertyChanged("AccessionNumber");
					this.OnAccessionNumberChanged();
				}
			}
		}
		
		[Column(Storage="_StudyInstanceUid", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string StudyInstanceUid
		{
			get
			{
				return this._StudyInstanceUid;
			}
			set
			{
				if ((this._StudyInstanceUid != value))
				{
					this.OnStudyInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._StudyInstanceUid = value;
					this.SendPropertyChanged("StudyInstanceUid");
					this.OnStudyInstanceUidChanged();
				}
			}
		}
		
		[Column(Storage="_StudyDescription", DbType="NVarChar(64)")]
		public string StudyDescription
		{
			get
			{
				return this._StudyDescription;
			}
			set
			{
				if ((this._StudyDescription != value))
				{
					this.OnStudyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._StudyDescription = value;
					this.SendPropertyChanged("StudyDescription");
					this.OnStudyDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ModalitiesInStudy", DbType="NVarChar(256)")]
		public string ModalitiesInStudy
		{
			get
			{
				return this._ModalitiesInStudy;
			}
			set
			{
				if ((this._ModalitiesInStudy != value))
				{
					this.OnModalitiesInStudyChanging(value);
					this.SendPropertyChanging();
					this._ModalitiesInStudy = value;
					this.SendPropertyChanged("ModalitiesInStudy");
					this.OnModalitiesInStudyChanged();
				}
			}
		}
		
		[Column(Storage="_NumberOfStudyRelatedSeries", DbType="Int")]
		public System.Nullable<int> NumberOfStudyRelatedSeries
		{
			get
			{
				return this._NumberOfStudyRelatedSeries;
			}
			set
			{
				if ((this._NumberOfStudyRelatedSeries != value))
				{
					this.OnNumberOfStudyRelatedSeriesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfStudyRelatedSeries = value;
					this.SendPropertyChanged("NumberOfStudyRelatedSeries");
					this.OnNumberOfStudyRelatedSeriesChanged();
				}
			}
		}
		
		[Column(Storage="_NumberOfStudyRelatedInstances", DbType="Int")]
		public System.Nullable<int> NumberOfStudyRelatedInstances
		{
			get
			{
				return this._NumberOfStudyRelatedInstances;
			}
			set
			{
				if ((this._NumberOfStudyRelatedInstances != value))
				{
					this.OnNumberOfStudyRelatedInstancesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfStudyRelatedInstances = value;
					this.SendPropertyChanged("NumberOfStudyRelatedInstances");
					this.OnNumberOfStudyRelatedInstancesChanged();
				}
			}
		}
		
		[Column(Storage="_SpecificCharacterSet", DbType="NVarChar(64)")]
		public string SpecificCharacterSet
		{
			get
			{
				return this._SpecificCharacterSet;
			}
			set
			{
				if ((this._SpecificCharacterSet != value))
				{
					this.OnSpecificCharacterSetChanging(value);
					this.SendPropertyChanging();
					this._SpecificCharacterSet = value;
					this.SendPropertyChanged("SpecificCharacterSet");
					this.OnSpecificCharacterSetChanged();
				}
			}
		}
		
		[Column(Storage="_ProcedureCodeSequenceCodingSchemeDesignator", DbType="NVarChar(16)")]
		public string ProcedureCodeSequenceCodingSchemeDesignator
		{
			get
			{
				return this._ProcedureCodeSequenceCodingSchemeDesignator;
			}
			set
			{
				if ((this._ProcedureCodeSequenceCodingSchemeDesignator != value))
				{
					this.OnProcedureCodeSequenceCodingSchemeDesignatorChanging(value);
					this.SendPropertyChanging();
					this._ProcedureCodeSequenceCodingSchemeDesignator = value;
					this.SendPropertyChanged("ProcedureCodeSequenceCodingSchemeDesignator");
					this.OnProcedureCodeSequenceCodingSchemeDesignatorChanged();
				}
			}
		}
		
		[Column(Storage="_ProcedureCodeSequenceCodeValue", DbType="NVarChar(16)")]
		public string ProcedureCodeSequenceCodeValue
		{
			get
			{
				return this._ProcedureCodeSequenceCodeValue;
			}
			set
			{
				if ((this._ProcedureCodeSequenceCodeValue != value))
				{
					this.OnProcedureCodeSequenceCodeValueChanging(value);
					this.SendPropertyChanging();
					this._ProcedureCodeSequenceCodeValue = value;
					this.SendPropertyChanged("ProcedureCodeSequenceCodeValue");
					this.OnProcedureCodeSequenceCodeValueChanged();
				}
			}
		}
		
		[Column(Storage="_StoreTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StoreTime
		{
			get
			{
				return this._StoreTime;
			}
			set
			{
				if ((this._StoreTime != value))
				{
					this.OnStoreTimeChanging(value);
					this.SendPropertyChanging();
					this._StoreTime = value;
					this.SendPropertyChanged("StoreTime");
					this.OnStoreTimeChanged();
				}
			}
		}
		
		[Column(Storage="_StudyXmlUri", DbType="NVarChar(1024)")]
		public string StudyXmlUri
		{
			get
			{
				return this._StudyXmlUri;
			}
			set
			{
				if ((this._StudyXmlUri != value))
				{
					this.OnStudyXmlUriChanging(value);
					this.SendPropertyChanging();
					this._StudyXmlUri = value;
					this.SendPropertyChanged("StudyXmlUri");
					this.OnStudyXmlUriChanged();
				}
			}
		}
		
		[Column(Storage="_PatientsNameRaw", DbType="NVarChar(256)")]
		public string PatientsNameRaw
		{
			get
			{
				return this._PatientsNameRaw;
			}
			set
			{
				if ((this._PatientsNameRaw != value))
				{
					this.OnPatientsNameRawChanging(value);
					this.SendPropertyChanging();
					this._PatientsNameRaw = value;
					this.SendPropertyChanged("PatientsNameRaw");
					this.OnPatientsNameRawChanged();
				}
			}
		}
		
		[Column(Storage="_PatientsName", DbType="NVarChar(256)")]
		public string PatientsName
		{
			get
			{
				return this._PatientsName;
			}
			set
			{
				if ((this._PatientsName != value))
				{
					this.OnPatientsNameChanging(value);
					this.SendPropertyChanging();
					this._PatientsName = value;
					this.SendPropertyChanged("PatientsName");
					this.OnPatientsNameChanged();
				}
			}
		}
		
		[Column(Storage="_ReferringPhysiciansNameRaw", DbType="NVarChar(256)")]
		public string ReferringPhysiciansNameRaw
		{
			get
			{
				return this._ReferringPhysiciansNameRaw;
			}
			set
			{
				if ((this._ReferringPhysiciansNameRaw != value))
				{
					this.OnReferringPhysiciansNameRawChanging(value);
					this.SendPropertyChanging();
					this._ReferringPhysiciansNameRaw = value;
					this.SendPropertyChanged("ReferringPhysiciansNameRaw");
					this.OnReferringPhysiciansNameRawChanged();
				}
			}
		}
		
		[Column(Storage="_ReferringPhysiciansName", DbType="NVarChar(256)")]
		public string ReferringPhysiciansName
		{
			get
			{
				return this._ReferringPhysiciansName;
			}
			set
			{
				if ((this._ReferringPhysiciansName != value))
				{
					this.OnReferringPhysiciansNameChanging(value);
					this.SendPropertyChanging();
					this._ReferringPhysiciansName = value;
					this.SendPropertyChanged("ReferringPhysiciansName");
					this.OnReferringPhysiciansNameChanged();
				}
			}
		}
		
		[Column(Storage="_PatientId", DbType="NVarChar(64)")]
		public string PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[Column(Storage="_PatientsSex", DbType="NVarChar(16)")]
		public string PatientsSex
		{
			get
			{
				return this._PatientsSex;
			}
			set
			{
				if ((this._PatientsSex != value))
				{
					this.OnPatientsSexChanging(value);
					this.SendPropertyChanging();
					this._PatientsSex = value;
					this.SendPropertyChanged("PatientsSex");
					this.OnPatientsSexChanged();
				}
			}
		}
		
		[Column(Storage="_PatientsBirthDateRaw", DbType="NVarChar(16)")]
		public string PatientsBirthDateRaw
		{
			get
			{
				return this._PatientsBirthDateRaw;
			}
			set
			{
				if ((this._PatientsBirthDateRaw != value))
				{
					this.OnPatientsBirthDateRawChanging(value);
					this.SendPropertyChanging();
					this._PatientsBirthDateRaw = value;
					this.SendPropertyChanged("PatientsBirthDateRaw");
					this.OnPatientsBirthDateRawChanged();
				}
			}
		}
		
		[Column(Storage="_PatientSpeciesDescription", DbType="NVarChar(64)")]
		public string PatientSpeciesDescription
		{
			get
			{
				return this._PatientSpeciesDescription;
			}
			set
			{
				if ((this._PatientSpeciesDescription != value))
				{
					this.OnPatientSpeciesDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PatientSpeciesDescription = value;
					this.SendPropertyChanged("PatientSpeciesDescription");
					this.OnPatientSpeciesDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_PatientSpeciesCodeSequenceCodingSchemeDesignator", DbType="NVarChar(16)")]
		public string PatientSpeciesCodeSequenceCodingSchemeDesignator
		{
			get
			{
				return this._PatientSpeciesCodeSequenceCodingSchemeDesignator;
			}
			set
			{
				if ((this._PatientSpeciesCodeSequenceCodingSchemeDesignator != value))
				{
					this.OnPatientSpeciesCodeSequenceCodingSchemeDesignatorChanging(value);
					this.SendPropertyChanging();
					this._PatientSpeciesCodeSequenceCodingSchemeDesignator = value;
					this.SendPropertyChanged("PatientSpeciesCodeSequenceCodingSchemeDesignator");
					this.OnPatientSpeciesCodeSequenceCodingSchemeDesignatorChanged();
				}
			}
		}
		
		[Column(Storage="_PatientSpeciesCodeSequenceCodeValue", DbType="NVarChar(16)")]
		public string PatientSpeciesCodeSequenceCodeValue
		{
			get
			{
				return this._PatientSpeciesCodeSequenceCodeValue;
			}
			set
			{
				if ((this._PatientSpeciesCodeSequenceCodeValue != value))
				{
					this.OnPatientSpeciesCodeSequenceCodeValueChanging(value);
					this.SendPropertyChanging();
					this._PatientSpeciesCodeSequenceCodeValue = value;
					this.SendPropertyChanged("PatientSpeciesCodeSequenceCodeValue");
					this.OnPatientSpeciesCodeSequenceCodeValueChanged();
				}
			}
		}
		
		[Column(Storage="_PatientSpeciesCodeSequenceCodeMeaning", DbType="NVarChar(64)")]
		public string PatientSpeciesCodeSequenceCodeMeaning
		{
			get
			{
				return this._PatientSpeciesCodeSequenceCodeMeaning;
			}
			set
			{
				if ((this._PatientSpeciesCodeSequenceCodeMeaning != value))
				{
					this.OnPatientSpeciesCodeSequenceCodeMeaningChanging(value);
					this.SendPropertyChanging();
					this._PatientSpeciesCodeSequenceCodeMeaning = value;
					this.SendPropertyChanged("PatientSpeciesCodeSequenceCodeMeaning");
					this.OnPatientSpeciesCodeSequenceCodeMeaningChanged();
				}
			}
		}
		
		[Column(Storage="_PatientBreedDescription", DbType="NVarChar(64)")]
		public string PatientBreedDescription
		{
			get
			{
				return this._PatientBreedDescription;
			}
			set
			{
				if ((this._PatientBreedDescription != value))
				{
					this.OnPatientBreedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PatientBreedDescription = value;
					this.SendPropertyChanged("PatientBreedDescription");
					this.OnPatientBreedDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_PatientBreedCodeSequenceCodingSchemeDesignator", DbType="NVarChar(16)")]
		public string PatientBreedCodeSequenceCodingSchemeDesignator
		{
			get
			{
				return this._PatientBreedCodeSequenceCodingSchemeDesignator;
			}
			set
			{
				if ((this._PatientBreedCodeSequenceCodingSchemeDesignator != value))
				{
					this.OnPatientBreedCodeSequenceCodingSchemeDesignatorChanging(value);
					this.SendPropertyChanging();
					this._PatientBreedCodeSequenceCodingSchemeDesignator = value;
					this.SendPropertyChanged("PatientBreedCodeSequenceCodingSchemeDesignator");
					this.OnPatientBreedCodeSequenceCodingSchemeDesignatorChanged();
				}
			}
		}
		
		[Column(Storage="_PatientBreedCodeSequenceCodeValue", DbType="NVarChar(16)")]
		public string PatientBreedCodeSequenceCodeValue
		{
			get
			{
				return this._PatientBreedCodeSequenceCodeValue;
			}
			set
			{
				if ((this._PatientBreedCodeSequenceCodeValue != value))
				{
					this.OnPatientBreedCodeSequenceCodeValueChanging(value);
					this.SendPropertyChanging();
					this._PatientBreedCodeSequenceCodeValue = value;
					this.SendPropertyChanged("PatientBreedCodeSequenceCodeValue");
					this.OnPatientBreedCodeSequenceCodeValueChanged();
				}
			}
		}
		
		[Column(Storage="_PatientBreedCodeSequenceCodeMeaning", DbType="NVarChar(64)")]
		public string PatientBreedCodeSequenceCodeMeaning
		{
			get
			{
				return this._PatientBreedCodeSequenceCodeMeaning;
			}
			set
			{
				if ((this._PatientBreedCodeSequenceCodeMeaning != value))
				{
					this.OnPatientBreedCodeSequenceCodeMeaningChanging(value);
					this.SendPropertyChanging();
					this._PatientBreedCodeSequenceCodeMeaning = value;
					this.SendPropertyChanged("PatientBreedCodeSequenceCodeMeaning");
					this.OnPatientBreedCodeSequenceCodeMeaningChanged();
				}
			}
		}
		
		[Column(Storage="_ResponsiblePerson", DbType="NVarChar(256)")]
		public string ResponsiblePerson
		{
			get
			{
				return this._ResponsiblePerson;
			}
			set
			{
				if ((this._ResponsiblePerson != value))
				{
					this.OnResponsiblePersonChanging(value);
					this.SendPropertyChanging();
					this._ResponsiblePerson = value;
					this.SendPropertyChanged("ResponsiblePerson");
					this.OnResponsiblePersonChanged();
				}
			}
		}
		
		[Column(Storage="_ResponsiblePersonRaw", DbType="NVarChar(256)")]
		public string ResponsiblePersonRaw
		{
			get
			{
				return this._ResponsiblePersonRaw;
			}
			set
			{
				if ((this._ResponsiblePersonRaw != value))
				{
					this.OnResponsiblePersonRawChanging(value);
					this.SendPropertyChanging();
					this._ResponsiblePersonRaw = value;
					this.SendPropertyChanged("ResponsiblePersonRaw");
					this.OnResponsiblePersonRawChanged();
				}
			}
		}
		
		[Column(Storage="_ResponsiblePersonRole", DbType="NVarChar(16)")]
		public string ResponsiblePersonRole
		{
			get
			{
				return this._ResponsiblePersonRole;
			}
			set
			{
				if ((this._ResponsiblePersonRole != value))
				{
					this.OnResponsiblePersonRoleChanging(value);
					this.SendPropertyChanging();
					this._ResponsiblePersonRole = value;
					this.SendPropertyChanged("ResponsiblePersonRole");
					this.OnResponsiblePersonRoleChanged();
				}
			}
		}
		
		[Column(Storage="_ResponsibleOrganization", DbType="NVarChar(64)")]
		public string ResponsibleOrganization
		{
			get
			{
				return this._ResponsibleOrganization;
			}
			set
			{
				if ((this._ResponsibleOrganization != value))
				{
					this.OnResponsibleOrganizationChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleOrganization = value;
					this.SendPropertyChanged("ResponsibleOrganization");
					this.OnResponsibleOrganizationChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteTime", DbType="DateTime NOT NULL")]
		public System.DateTime DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[Association(Name="Study_WorkItem", Storage="_WorkItems", ThisKey="Oid", OtherKey="StudyOid")]
		public EntitySet<WorkItem> WorkItems
		{
			get
			{
				return this._WorkItems;
			}
			set
			{
				this._WorkItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkItems(WorkItem entity)
		{
			this.SendPropertyChanging();
			entity.Study = this;
		}
		
		private void detach_WorkItems(WorkItem entity)
		{
			this.SendPropertyChanging();
			entity.Study = null;
		}
	}
	
	[Table()]
	public partial class WorkItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private System.DateTime _InsertTime;
		
		private System.DateTime _ScheduledTime;
		
		private System.DateTime _ExpirationTime;
		
		private System.DateTime _DeleteTime;
		
		private global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemStatusEnum _Status;
		
		private global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemTypeEnum _Type;
		
		private global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemPriorityEnum _Priority;
		
		private System.Data.Linq.Binary _StudyInstanceUid;
		
		private System.Nullable<long> _StudyOid;
		
		private string _SerializedStudy;
		
		private string _SerializedPatient;
		
		private string _SerializedRequest;
		
		private EntitySet<WorkItemUid> _WorkItemUids;
		
		private EntityRef<Study> _Study;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnInsertTimeChanging(System.DateTime value);
    partial void OnInsertTimeChanged();
    partial void OnScheduledTimeChanging(System.DateTime value);
    partial void OnScheduledTimeChanged();
    partial void OnExpirationTimeChanging(System.DateTime value);
    partial void OnExpirationTimeChanged();
    partial void OnDeleteTimeChanging(System.DateTime value);
    partial void OnDeleteTimeChanged();
    partial void OnStatusChanging(global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemStatusEnum value);
    partial void OnStatusChanged();
    partial void OnTypeChanging(global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemTypeEnum value);
    partial void OnTypeChanged();
    partial void OnPriorityChanging(global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemPriorityEnum value);
    partial void OnPriorityChanged();
    partial void OnStudyInstanceUidChanging(System.Data.Linq.Binary value);
    partial void OnStudyInstanceUidChanged();
    partial void OnStudyOidChanging(System.Nullable<long> value);
    partial void OnStudyOidChanged();
    partial void OnSerializedStudyChanging(string value);
    partial void OnSerializedStudyChanged();
    partial void OnSerializedPatientChanging(string value);
    partial void OnSerializedPatientChanged();
    partial void OnSerializedRequestChanging(string value);
    partial void OnSerializedRequestChanged();
    #endregion
		
		public WorkItem()
		{
			this._WorkItemUids = new EntitySet<WorkItemUid>(new Action<WorkItemUid>(this.attach_WorkItemUids), new Action<WorkItemUid>(this.detach_WorkItemUids));
			this._Study = default(EntityRef<Study>);
			OnCreated();
		}
		
		[Column(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[Column(Storage="_InsertTime", DbType="DateTime NOT NULL")]
		public System.DateTime InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[Column(Storage="_ScheduledTime", DbType="DateTime NOT NULL")]
		public System.DateTime ScheduledTime
		{
			get
			{
				return this._ScheduledTime;
			}
			set
			{
				if ((this._ScheduledTime != value))
				{
					this.OnScheduledTimeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledTime = value;
					this.SendPropertyChanged("ScheduledTime");
					this.OnScheduledTimeChanged();
				}
			}
		}
		
		[Column(Storage="_ExpirationTime", DbType="DateTime NOT NULL")]
		public System.DateTime ExpirationTime
		{
			get
			{
				return this._ExpirationTime;
			}
			set
			{
				if ((this._ExpirationTime != value))
				{
					this.OnExpirationTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpirationTime = value;
					this.SendPropertyChanged("ExpirationTime");
					this.OnExpirationTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteTime", DbType="DateTime NOT NULL")]
		public System.DateTime DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="SmallInt NOT NULL", CanBeNull=false)]
		public global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemStatusEnum Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="SmallInt NOT NULL", CanBeNull=false)]
		public global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemTypeEnum Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Priority", DbType="SmallInt NOT NULL", CanBeNull=false)]
		public global::ClearCanvas.ImageViewer.Common.WorkItem.WorkItemPriorityEnum Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[Column(Storage="_StudyInstanceUid", DbType="VarBinary(64)")]
		public System.Data.Linq.Binary StudyInstanceUid
		{
			get
			{
				return this._StudyInstanceUid;
			}
			set
			{
				if ((this._StudyInstanceUid != value))
				{
					this.OnStudyInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._StudyInstanceUid = value;
					this.SendPropertyChanged("StudyInstanceUid");
					this.OnStudyInstanceUidChanged();
				}
			}
		}
		
		[Column(Storage="_StudyOid", DbType="BigInt")]
		public System.Nullable<long> StudyOid
		{
			get
			{
				return this._StudyOid;
			}
			set
			{
				if ((this._StudyOid != value))
				{
					if (this._Study.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudyOidChanging(value);
					this.SendPropertyChanging();
					this._StudyOid = value;
					this.SendPropertyChanged("StudyOid");
					this.OnStudyOidChanged();
				}
			}
		}
		
		[Column(Storage="_SerializedStudy", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SerializedStudy
		{
			get
			{
				return this._SerializedStudy;
			}
			set
			{
				if ((this._SerializedStudy != value))
				{
					this.OnSerializedStudyChanging(value);
					this.SendPropertyChanging();
					this._SerializedStudy = value;
					this.SendPropertyChanged("SerializedStudy");
					this.OnSerializedStudyChanged();
				}
			}
		}
		
		[Column(Storage="_SerializedPatient", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SerializedPatient
		{
			get
			{
				return this._SerializedPatient;
			}
			set
			{
				if ((this._SerializedPatient != value))
				{
					this.OnSerializedPatientChanging(value);
					this.SendPropertyChanging();
					this._SerializedPatient = value;
					this.SendPropertyChanged("SerializedPatient");
					this.OnSerializedPatientChanged();
				}
			}
		}
		
		[Column(Storage="_SerializedRequest", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SerializedRequest
		{
			get
			{
				return this._SerializedRequest;
			}
			set
			{
				if ((this._SerializedRequest != value))
				{
					this.OnSerializedRequestChanging(value);
					this.SendPropertyChanging();
					this._SerializedRequest = value;
					this.SendPropertyChanged("SerializedRequest");
					this.OnSerializedRequestChanged();
				}
			}
		}
		
		[Association(Name="WorkItem_WorkItemUid", Storage="_WorkItemUids", ThisKey="Oid", OtherKey="WorkItemOid")]
		public EntitySet<WorkItemUid> WorkItemUids
		{
			get
			{
				return this._WorkItemUids;
			}
			set
			{
				this._WorkItemUids.Assign(value);
			}
		}
		
		[Association(Name="Study_WorkItem", Storage="_Study", ThisKey="StudyOid", OtherKey="Oid", IsForeignKey=true)]
		public Study Study
		{
			get
			{
				return this._Study.Entity;
			}
			set
			{
				Study previousValue = this._Study.Entity;
				if (((previousValue != value) 
							|| (this._Study.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Study.Entity = null;
						previousValue.WorkItems.Remove(this);
					}
					this._Study.Entity = value;
					if ((value != null))
					{
						value.WorkItems.Add(this);
						this._StudyOid = value.Oid;
					}
					else
					{
						this._StudyOid = default(Nullable<long>);
					}
					this.SendPropertyChanged("Study");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkItemUids(WorkItemUid entity)
		{
			this.SendPropertyChanging();
			entity.WorkItem = this;
		}
		
		private void detach_WorkItemUids(WorkItemUid entity)
		{
			this.SendPropertyChanging();
			entity.WorkItem = null;
		}
	}
	
	[Table()]
	public partial class WorkItemUid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Oid;
		
		private System.Nullable<long> _WorkItemOid;
		
		private string _SeriesInstanceUid;
		
		private string _SopInstanceUid;
		
		private bool _Complete;
		
		private System.Nullable<byte> _FailureCount;
		
		private EntityRef<WorkItem> _WorkItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(long value);
    partial void OnOidChanged();
    partial void OnWorkItemOidChanging(System.Nullable<long> value);
    partial void OnWorkItemOidChanged();
    partial void OnSeriesInstanceUidChanging(string value);
    partial void OnSeriesInstanceUidChanged();
    partial void OnSopInstanceUidChanging(string value);
    partial void OnSopInstanceUidChanged();
    partial void OnCompleteChanging(bool value);
    partial void OnCompleteChanged();
    partial void OnFailureCountChanging(System.Nullable<byte> value);
    partial void OnFailureCountChanged();
    #endregion
		
		public WorkItemUid()
		{
			this._WorkItem = default(EntityRef<WorkItem>);
			OnCreated();
		}
		
		[Column(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[Column(Storage="_WorkItemOid", DbType="BigInt")]
		public System.Nullable<long> WorkItemOid
		{
			get
			{
				return this._WorkItemOid;
			}
			set
			{
				if ((this._WorkItemOid != value))
				{
					if (this._WorkItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkItemOidChanging(value);
					this.SendPropertyChanging();
					this._WorkItemOid = value;
					this.SendPropertyChanged("WorkItemOid");
					this.OnWorkItemOidChanged();
				}
			}
		}
		
		[Column(Storage="_SeriesInstanceUid", DbType="NVarChar(64)")]
		public string SeriesInstanceUid
		{
			get
			{
				return this._SeriesInstanceUid;
			}
			set
			{
				if ((this._SeriesInstanceUid != value))
				{
					this.OnSeriesInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._SeriesInstanceUid = value;
					this.SendPropertyChanged("SeriesInstanceUid");
					this.OnSeriesInstanceUidChanged();
				}
			}
		}
		
		[Column(Storage="_SopInstanceUid", DbType="NVarChar(64)")]
		public string SopInstanceUid
		{
			get
			{
				return this._SopInstanceUid;
			}
			set
			{
				if ((this._SopInstanceUid != value))
				{
					this.OnSopInstanceUidChanging(value);
					this.SendPropertyChanging();
					this._SopInstanceUid = value;
					this.SendPropertyChanged("SopInstanceUid");
					this.OnSopInstanceUidChanged();
				}
			}
		}
		
		[Column(Storage="_Complete", DbType="Bit NOT NULL")]
		public bool Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this.OnCompleteChanging(value);
					this.SendPropertyChanging();
					this._Complete = value;
					this.SendPropertyChanged("Complete");
					this.OnCompleteChanged();
				}
			}
		}
		
		[Column(Storage="_FailureCount", DbType="TinyInt")]
		public System.Nullable<byte> FailureCount
		{
			get
			{
				return this._FailureCount;
			}
			set
			{
				if ((this._FailureCount != value))
				{
					this.OnFailureCountChanging(value);
					this.SendPropertyChanging();
					this._FailureCount = value;
					this.SendPropertyChanged("FailureCount");
					this.OnFailureCountChanged();
				}
			}
		}
		
		[Association(Name="WorkItem_WorkItemUid", Storage="_WorkItem", ThisKey="WorkItemOid", OtherKey="Oid", IsForeignKey=true)]
		public WorkItem WorkItem
		{
			get
			{
				return this._WorkItem.Entity;
			}
			set
			{
				WorkItem previousValue = this._WorkItem.Entity;
				if (((previousValue != value) 
							|| (this._WorkItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkItem.Entity = null;
						previousValue.WorkItemUids.Remove(this);
					}
					this._WorkItem.Entity = value;
					if ((value != null))
					{
						value.WorkItemUids.Add(this);
						this._WorkItemOid = value.Oid;
					}
					else
					{
						this._WorkItemOid = default(Nullable<long>);
					}
					this.SendPropertyChanged("WorkItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
