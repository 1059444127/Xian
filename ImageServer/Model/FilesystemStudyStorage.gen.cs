#region License

// Copyright (c) 2011, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This software is licensed under the Open Software License v3.0.
// For the complete license, see http://www.clearcanvas.ca/OSLv3.0

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer2005.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model
{
    using System;
    using System.Xml;
    using ClearCanvas.Enterprise.Core;
    using ClearCanvas.ImageServer.Enterprise;
    using ClearCanvas.ImageServer.Model.EntityBrokers;

    [Serializable]
    public partial class FilesystemStudyStorage: ServerEntity
    {
        #region Constructors
        public FilesystemStudyStorage():base("FilesystemStudyStorage")
        {}
        public FilesystemStudyStorage(
             ServerEntityKey _studyStorageKey_
            ,ServerEntityKey _filesystemKey_
            ,ServerEntityKey _serverTransferSyntaxKey_
            ,String _studyFolder_
            ):base("FilesystemStudyStorage")
        {
            StudyStorageKey = _studyStorageKey_;
            FilesystemKey = _filesystemKey_;
            ServerTransferSyntaxKey = _serverTransferSyntaxKey_;
            StudyFolder = _studyFolder_;
        }
        #endregion

        #region Public Properties
        [EntityFieldDatabaseMappingAttribute(TableName="FilesystemStudyStorage", ColumnName="StudyStorageGUID")]
        public ServerEntityKey StudyStorageKey
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="FilesystemStudyStorage", ColumnName="FilesystemGUID")]
        public ServerEntityKey FilesystemKey
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="FilesystemStudyStorage", ColumnName="ServerTransferSyntaxGUID")]
        public ServerEntityKey ServerTransferSyntaxKey
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="FilesystemStudyStorage", ColumnName="StudyFolder")]
        public String StudyFolder
        { get; set; }
        #endregion

        #region Static Methods
        static public FilesystemStudyStorage Load(ServerEntityKey key)
        {
            using (IReadContext read = PersistentStoreRegistry.GetDefaultStore().OpenReadContext())
            {
                return Load(read, key);
            }
        }
        static public FilesystemStudyStorage Load(IPersistenceContext read, ServerEntityKey key)
        {
            IFilesystemStudyStorageEntityBroker broker = read.GetBroker<IFilesystemStudyStorageEntityBroker>();
            FilesystemStudyStorage theObject = broker.Load(key);
            return theObject;
        }
        static public FilesystemStudyStorage Insert(FilesystemStudyStorage entity)
        {
            using (IUpdateContext update = PersistentStoreRegistry.GetDefaultStore().OpenUpdateContext(UpdateContextSyncMode.Flush))
            {
                FilesystemStudyStorage newEntity = Insert(update, entity);
                update.Commit();
                return newEntity;
            }
        }
        static public FilesystemStudyStorage Insert(IUpdateContext update, FilesystemStudyStorage entity)
        {
            IFilesystemStudyStorageEntityBroker broker = update.GetBroker<IFilesystemStudyStorageEntityBroker>();
            FilesystemStudyStorageUpdateColumns updateColumns = new FilesystemStudyStorageUpdateColumns();
            updateColumns.StudyStorageKey = entity.StudyStorageKey;
            updateColumns.FilesystemKey = entity.FilesystemKey;
            updateColumns.ServerTransferSyntaxKey = entity.ServerTransferSyntaxKey;
            updateColumns.StudyFolder = entity.StudyFolder;
            FilesystemStudyStorage newEntity = broker.Insert(updateColumns);
            return newEntity;
        }
        #endregion
    }
}
