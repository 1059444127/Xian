#region License

// Copyright (c) 2010, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This software is licensed under the Open Software License v3.0.
// For the complete license, see http://www.clearcanvas.ca/OSLv3.0

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer2005.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model.EntityBrokers
{
    using System;
    using System.Xml;
    using ClearCanvas.Enterprise.Core;
    using ClearCanvas.ImageServer.Enterprise;

    public partial class StudyIntegrityQueueUidSelectCriteria : EntitySelectCriteria
    {
        public StudyIntegrityQueueUidSelectCriteria()
        : base("StudyIntegrityQueueUid")
        {}
        public StudyIntegrityQueueUidSelectCriteria(StudyIntegrityQueueUidSelectCriteria other)
        : base(other)
        {}
        public override object Clone()
        {
            return new StudyIntegrityQueueUidSelectCriteria(this);
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyIntegrityQueueUid", ColumnName="StudyIntegrityQueueGUID")]
        public ISearchCondition<ServerEntityKey> StudyIntegrityQueueKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyIntegrityQueueKey"))
              {
                 SubCriteria["StudyIntegrityQueueKey"] = new SearchCondition<ServerEntityKey>("StudyIntegrityQueueKey");
              }
              return (ISearchCondition<ServerEntityKey>)SubCriteria["StudyIntegrityQueueKey"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyIntegrityQueueUid", ColumnName="SeriesInstanceUid")]
        public ISearchCondition<String> SeriesInstanceUid
        {
            get
            {
              if (!SubCriteria.ContainsKey("SeriesInstanceUid"))
              {
                 SubCriteria["SeriesInstanceUid"] = new SearchCondition<String>("SeriesInstanceUid");
              }
              return (ISearchCondition<String>)SubCriteria["SeriesInstanceUid"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyIntegrityQueueUid", ColumnName="SopInstanceUid")]
        public ISearchCondition<String> SopInstanceUid
        {
            get
            {
              if (!SubCriteria.ContainsKey("SopInstanceUid"))
              {
                 SubCriteria["SopInstanceUid"] = new SearchCondition<String>("SopInstanceUid");
              }
              return (ISearchCondition<String>)SubCriteria["SopInstanceUid"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyIntegrityQueueUid", ColumnName="RelativePath")]
        public ISearchCondition<String> RelativePath
        {
            get
            {
              if (!SubCriteria.ContainsKey("RelativePath"))
              {
                 SubCriteria["RelativePath"] = new SearchCondition<String>("RelativePath");
              }
              return (ISearchCondition<String>)SubCriteria["RelativePath"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="StudyIntegrityQueueUid", ColumnName="SeriesDescription")]
        public ISearchCondition<String> SeriesDescription
        {
            get
            {
              if (!SubCriteria.ContainsKey("SeriesDescription"))
              {
                 SubCriteria["SeriesDescription"] = new SearchCondition<String>("SeriesDescription");
              }
              return (ISearchCondition<String>)SubCriteria["SeriesDescription"];
            } 
        }
    }
}
