#region License

// Copyright (c) 2011, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This software is licensed under the Open Software License v3.0.
// For the complete license, see http://www.clearcanvas.ca/OSLv3.0

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer2005.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model.EntityBrokers
{
    using System;
    using System.Xml;
    using ClearCanvas.Enterprise.Core;
    using ClearCanvas.ImageServer.Enterprise;

    public partial class RestoreQueueSelectCriteria : EntitySelectCriteria
    {
        public RestoreQueueSelectCriteria()
        : base("RestoreQueue")
        {}
        public RestoreQueueSelectCriteria(RestoreQueueSelectCriteria other)
        : base(other)
        {}
        public override object Clone()
        {
            return new RestoreQueueSelectCriteria(this);
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="ArchiveStudyStorageGUID")]
        public ISearchCondition<ServerEntityKey> ArchiveStudyStorageKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("ArchiveStudyStorageKey"))
              {
                 SubCriteria["ArchiveStudyStorageKey"] = new SearchCondition<ServerEntityKey>("ArchiveStudyStorageKey");
              }
              return (ISearchCondition<ServerEntityKey>)SubCriteria["ArchiveStudyStorageKey"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="StudyStorageGUID")]
        public ISearchCondition<ServerEntityKey> StudyStorageKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyStorageKey"))
              {
                 SubCriteria["StudyStorageKey"] = new SearchCondition<ServerEntityKey>("StudyStorageKey");
              }
              return (ISearchCondition<ServerEntityKey>)SubCriteria["StudyStorageKey"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="ScheduledTime")]
        public ISearchCondition<DateTime> ScheduledTime
        {
            get
            {
              if (!SubCriteria.ContainsKey("ScheduledTime"))
              {
                 SubCriteria["ScheduledTime"] = new SearchCondition<DateTime>("ScheduledTime");
              }
              return (ISearchCondition<DateTime>)SubCriteria["ScheduledTime"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="RestoreQueueStatusEnum")]
        public ISearchCondition<RestoreQueueStatusEnum> RestoreQueueStatusEnum
        {
            get
            {
              if (!SubCriteria.ContainsKey("RestoreQueueStatusEnum"))
              {
                 SubCriteria["RestoreQueueStatusEnum"] = new SearchCondition<RestoreQueueStatusEnum>("RestoreQueueStatusEnum");
              }
              return (ISearchCondition<RestoreQueueStatusEnum>)SubCriteria["RestoreQueueStatusEnum"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="ProcessorId")]
        public ISearchCondition<String> ProcessorId
        {
            get
            {
              if (!SubCriteria.ContainsKey("ProcessorId"))
              {
                 SubCriteria["ProcessorId"] = new SearchCondition<String>("ProcessorId");
              }
              return (ISearchCondition<String>)SubCriteria["ProcessorId"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="RestoreQueue", ColumnName="FailureDescription")]
        public ISearchCondition<String> FailureDescription
        {
            get
            {
              if (!SubCriteria.ContainsKey("FailureDescription"))
              {
                 SubCriteria["FailureDescription"] = new SearchCondition<String>("FailureDescription");
              }
              return (ISearchCondition<String>)SubCriteria["FailureDescription"];
            } 
        }
    }
}
