#region License

// Copyright (c) 2010, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This software is licensed under the Open Software License v3.0.
// For the complete license, see http://www.clearcanvas.ca/OSLv3.0

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer2005.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model.EntityBrokers
{
    using System;
    using System.Xml;
    using ClearCanvas.Enterprise.Core;
    using ClearCanvas.ImageServer.Enterprise;

    public partial class CannedTextSelectCriteria : EntitySelectCriteria
    {
        public CannedTextSelectCriteria()
        : base("CannedText")
        {}
        public CannedTextSelectCriteria(CannedTextSelectCriteria other)
        : base(other)
        {}
        public override object Clone()
        {
            return new CannedTextSelectCriteria(this);
        }
        [EntityFieldDatabaseMappingAttribute(TableName="CannedText", ColumnName="Label")]
        public ISearchCondition<String> Label
        {
            get
            {
              if (!SubCriteria.ContainsKey("Label"))
              {
                 SubCriteria["Label"] = new SearchCondition<String>("Label");
              }
              return (ISearchCondition<String>)SubCriteria["Label"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="CannedText", ColumnName="Category")]
        public ISearchCondition<String> Category
        {
            get
            {
              if (!SubCriteria.ContainsKey("Category"))
              {
                 SubCriteria["Category"] = new SearchCondition<String>("Category");
              }
              return (ISearchCondition<String>)SubCriteria["Category"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="CannedText", ColumnName="Text")]
        public ISearchCondition<String> Text
        {
            get
            {
              if (!SubCriteria.ContainsKey("Text"))
              {
                 SubCriteria["Text"] = new SearchCondition<String>("Text");
              }
              return (ISearchCondition<String>)SubCriteria["Text"];
            } 
        }
    }
}
