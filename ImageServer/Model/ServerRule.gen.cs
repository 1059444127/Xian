#region License

// Copyright (c) 2010, ClearCanvas Inc.
// All rights reserved.
// http://www.clearcanvas.ca
//
// This software is licensed under the Open Software License v3.0.
// For the complete license, see http://www.clearcanvas.ca/OSLv3.0

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer2005.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model
{
    using System;
    using System.Xml;
    using ClearCanvas.Enterprise.Core;
    using ClearCanvas.ImageServer.Enterprise;
    using ClearCanvas.ImageServer.Model.EntityBrokers;

    [Serializable]
    public partial class ServerRule: ServerEntity
    {
        #region Constructors
        public ServerRule():base("ServerRule")
        {}
        public ServerRule(
             String _ruleName_
            ,ServerEntityKey _serverPartitionKey_
            ,ServerRuleTypeEnum _serverRuleTypeEnum_
            ,ServerRuleApplyTimeEnum _serverRuleApplyTimeEnum_
            ,Boolean _enabled_
            ,Boolean _defaultRule_
            ,Boolean _exemptRule_
            ,XmlDocument _ruleXml_
            ):base("ServerRule")
        {
            RuleName = _ruleName_;
            ServerPartitionKey = _serverPartitionKey_;
            ServerRuleTypeEnum = _serverRuleTypeEnum_;
            ServerRuleApplyTimeEnum = _serverRuleApplyTimeEnum_;
            Enabled = _enabled_;
            DefaultRule = _defaultRule_;
            ExemptRule = _exemptRule_;
            RuleXml = _ruleXml_;
        }
        #endregion

        #region Public Properties
        [EntityFieldDatabaseMappingAttribute(TableName="ServerRule", ColumnName="RuleName")]
        public String RuleName
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerRule", ColumnName="ServerPartitionGUID")]
        public ServerEntityKey ServerPartitionKey
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerRule", ColumnName="ServerRuleTypeEnum")]
        public ServerRuleTypeEnum ServerRuleTypeEnum
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerRule", ColumnName="ServerRuleApplyTimeEnum")]
        public ServerRuleApplyTimeEnum ServerRuleApplyTimeEnum
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerRule", ColumnName="Enabled")]
        public Boolean Enabled
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerRule", ColumnName="DefaultRule")]
        public Boolean DefaultRule
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerRule", ColumnName="ExemptRule")]
        public Boolean ExemptRule
        { get; set; }
        [EntityFieldDatabaseMappingAttribute(TableName="ServerRule", ColumnName="RuleXml")]
        public XmlDocument RuleXml
        { get; set; }
        #endregion

        #region Static Methods
        static public ServerRule Load(ServerEntityKey key)
        {
            using (IReadContext read = PersistentStoreRegistry.GetDefaultStore().OpenReadContext())
            {
                return Load(read, key);
            }
        }
        static public ServerRule Load(IPersistenceContext read, ServerEntityKey key)
        {
            IServerRuleEntityBroker broker = read.GetBroker<IServerRuleEntityBroker>();
            ServerRule theObject = broker.Load(key);
            return theObject;
        }
        static public ServerRule Insert(ServerRule entity)
        {
            using (IUpdateContext update = PersistentStoreRegistry.GetDefaultStore().OpenUpdateContext(UpdateContextSyncMode.Flush))
            {
                ServerRule newEntity = Insert(update, entity);
                update.Commit();
                return newEntity;
            }
        }
        static public ServerRule Insert(IUpdateContext update, ServerRule entity)
        {
            IServerRuleEntityBroker broker = update.GetBroker<IServerRuleEntityBroker>();
            ServerRuleUpdateColumns updateColumns = new ServerRuleUpdateColumns();
            updateColumns.RuleName = entity.RuleName;
            updateColumns.ServerPartitionKey = entity.ServerPartitionKey;
            updateColumns.ServerRuleTypeEnum = entity.ServerRuleTypeEnum;
            updateColumns.ServerRuleApplyTimeEnum = entity.ServerRuleApplyTimeEnum;
            updateColumns.Enabled = entity.Enabled;
            updateColumns.DefaultRule = entity.DefaultRule;
            updateColumns.ExemptRule = entity.ExemptRule;
            updateColumns.RuleXml = entity.RuleXml;
            ServerRule newEntity = broker.Insert(updateColumns);
            return newEntity;
        }
        #endregion
    }
}
